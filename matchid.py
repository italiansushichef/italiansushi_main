import urllib2, json, sys, osfrom riotwatcher import RiotWatcherfrom datetime import datetime, timedeltatoday = datetime.now()twoweeks = timedelta(days=14)if len(sys.argv) != 3:    print "usage: python matchid.py [API_KEY]  [max_matches]"    sys.exit(0)max_matches = int(sys.argv[2])d = []API_KEY = sys.argv[1]w = RiotWatcher(API_KEY)f = []sumfile = 'static/json-data/summonerids.json'with open(sumfile, 'r') as readfile:    sumdata = json.load(readfile)    summid = sumdata['summonerids']i = 5475print i#j = 0fsize = 0    #if w.can_make_request() == True:urlone = 'https://na.api.pvp.net/api/lol/na/v2.2/matchhistory/' + str(summid[i]) +  '?rankedQueues=RANKED_SOLO_5x5&api_key=' + API_KEYreadsummfile = urllib2.urlopen(urlone)#j += 1data = json.load(readsummfile)for match in data["matches"]:    past = datetime.fromtimestamp(match["matchCreation"] / 1000)    recentgamedata = today - past    matches = {"recentmatchId":"", "champs":[]}    if recentgamedata <= twoweeks:        matches["recentmatchId"] = match["matchId"]        f.append(match["matchId"])                urltwo = 'https://na.api.pvp.net/api/lol/na/v2.2/match/' + str(f[fsize]) + '?api_key=' + API_KEY        print str(fsize) + " " + str(f[fsize])        #j += 1                #print urltwo        fsize += 1                #print urltwo        readmatchfile = urllib2.urlopen(urltwo)        matchdata = json.load(readmatchfile)                    for players in matchdata["participants"]:            champion = {}            champion["id"] = players["championId"]            champion["position"] = players["timeline"]["lane"]            matches["champs"].append(champion)            #j += 1          d.append(matches)i += 1#j += 1while len(d) < (max_matches * 10):    #if w.can_make_request() == True:    urla = 'https://na.api.pvp.net/api/lol/na/v2.2/matchhistory/' + str(summid[i]) +  '?rankedQueues=RANKED_SOLO_5x5&api_key=' + API_KEY    readsummfile = urllib2.urlopen(urla)        #j += 1        data = json.load(readsummfile)    for match in data["matches"]:        past = datetime.fromtimestamp(match["matchCreation"] / 1000)        recentgamedata = today - past        matches = {"recentmatchId":"", "champs":[]}        if match["matchId"] not in f:            if recentgamedata <= twoweeks:                matches["recentmatchId"] = match["matchId"]                f.append(match["matchId"])                                urlb = 'https://na.api.pvp.net/api/lol/na/v2.2/match/' + str(f[fsize]) + '?api_key=' + API_KEY                print str(fsize) + " " + str(f[fsize])                fsize += 1                                #j += 1                                readmatchfile2 = urllib2.urlopen(urlb)                matchdata = json.load(readmatchfile2)                            for players in matchdata["participants"]:                    champion = {}                    champion["id"] = players["championId"]                    champion["position"] = players["timeline"]["lane"]                    matches["champs"].append(champion)                    #j += 1                                    d.append(matches)                            i += 1            #j += 1filepath = 'static/json-data/matchidss.json'output={'match_count':max_matches * 10, 'matches':d}if os.path.isfile(filepath):    with open(filepath, 'r') as readfile:        filedata = json.load(readfile)        if filedata and filedata['match_count'] and filedata['matches']:            for mid in output['matches']:                #if mid["recentmatchId"] not in output['matches']:                filedata['matches'].append(mid)                filedata['match_count'] += 1                with open(filepath, 'w') as outfile:    json.dump(filedata, outfile, indent = 4)    print filedata['match_count']#print "Calls: " + str(j)print "done"filepath = 'static/json-data/updatetime.json'if os.path.isfile(filepath):    with open(filepath, 'r') as readfile:        filedata = json.load(readfile)        filedata['Updates']['Update Match Data'] = today.strftime('Updated on %m/%d/%Y %H:%M')with open(filepath, 'w') as outfile:    json.dump(filedata,outfile, indent = 4)            